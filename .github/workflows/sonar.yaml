name: Two-Tier App CI/CD (No Docker Compose)

on:
  push:
    branches:
      - main

jobs:
  sonar:
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: http://${{ secrets.EC2_HOST }}:9000

  deploy:
    name: Deploy to EC2 (Docker Only)
    needs: sonar
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Sync Code to EC2
        run: |
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/my-app/

      - name: SSH into EC2 and deploy containers manually
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/docker_frontend/docker_compose

            echo "Building backend image..."
            docker build -t my-backend ./node_backend 

            echo "Stopping old backend container..."
            docker stop backend || true && docker rm backend || true

            echo "Running backend container..."
            docker run -d --name backend -p 8081:8081 my-backend

            echo "Building frontend image..."
            docker build -t my-frontend ./web_frontend


            echo "Stopping old frontend container..."
            docker stop frontend || true && docker rm frontend || true

            echo "Running frontend container..."
            docker run -d --name frontend -p 9091:80 my-frontend
          EOF
